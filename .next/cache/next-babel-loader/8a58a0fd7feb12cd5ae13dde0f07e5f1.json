{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport nodemailer from \"nodemailer\";\nexport function Mailer(_x) {\n  return _Mailer.apply(this, arguments);\n}\n_c2 = Mailer;\n\nfunction _Mailer() {\n  _Mailer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var transporter, HelperOptions;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            transporter = nodemailer.createTransport({\n              serivce: \"gmail\",\n              secure: false,\n              port: 25,\n              auth: {\n                user: process.env.USER,\n                pass: process.env.PASS\n              },\n              tls: {\n                rejectUnauthorized: false\n              }\n            });\n            HelperOptions = {\n              from: props.from,\n              to: \"mike@gamaroff.net\",\n              subject: \"Caqophony Email\",\n              text: props.name + \" just sent you a message: <br>\" + props.message\n            };\n            transporter.sendMail(HelperOptions, function (error, info) {\n              if (error) {\n                console.log(error);\n              } else {\n                console.log(info);\n                console.log(\"Message was sent\");\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Mailer.apply(this, arguments);\n}\n\n_c = Mailer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mailer\");\n$RefreshReg$(_c2, \"Mailer\");","map":{"version":3,"sources":["/Users/mikegam/Documents/caqophonyNext/util/mailer.js"],"names":["nodemailer","Mailer","props","transporter","createTransport","serivce","secure","port","auth","user","process","env","USER","pass","PASS","tls","rejectUnauthorized","HelperOptions","from","to","subject","text","name","message","sendMail","error","info","console","log"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;MAAsBA,M;;;qEAAf,iBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,WADC,GACaH,UAAU,CAACI,eAAX,CAA2B;AAC3CC,cAAAA,OAAO,EAAE,OADkC;AAE3CC,cAAAA,MAAM,EAAE,KAFmC;AAG3CC,cAAAA,IAAI,EAAE,EAHqC;AAI3CC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADd;AAEJC,gBAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFd,eAJqC;AAQ3CC,cAAAA,GAAG,EAAE;AACHC,gBAAAA,kBAAkB,EAAE;AADjB;AARsC,aAA3B,CADb;AAcDC,YAAAA,aAdC,GAce;AAClBC,cAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADM;AAElBC,cAAAA,EAAE,EAAE,mBAFc;AAGlBC,cAAAA,OAAO,EAAE,iBAHS;AAIlBC,cAAAA,IAAI,EAAEnB,KAAK,CAACoB,IAAN,GAAa,gCAAb,GAAgDpB,KAAK,CAACqB;AAJ1C,aAdf;AAqBLpB,YAAAA,WAAW,CAACqB,QAAZ,CAAqBP,aAArB,EAAoC,UAACQ,KAAD,EAAQC,IAAR,EAAiB;AACnD,kBAAID,KAAJ,EAAW;AACTE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,eAFD,MAEO;AACLE,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,aAPD;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAe3B,M","sourcesContent":["import nodemailer from \"nodemailer\";\n\nexport async function Mailer(props) {\n  let transporter = nodemailer.createTransport({\n    serivce: \"gmail\",\n    secure: false,\n    port: 25,\n    auth: {\n      user: process.env.USER,\n      pass: process.env.PASS,\n    },\n    tls: {\n      rejectUnauthorized: false,\n    },\n  });\n\n  let HelperOptions = {\n    from: props.from,\n    to: \"mike@gamaroff.net\",\n    subject: \"Caqophony Email\",\n    text: props.name + \" just sent you a message: <br>\" + props.message,\n  };\n\n  transporter.sendMail(HelperOptions, (error, info) => {\n    if (error) {\n      console.log(error);\n    } else {\n      console.log(info);\n      console.log(\"Message was sent\");\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}